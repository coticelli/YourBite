<!DOCTYPE html>
<html lang="it">
<head>
    <link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/icona?family=Poppins:400,500,600,700&display=swap" rel="stylesheet">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>YourBite - Admin Dashboard</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        :root {
            --primary: #d62300;
            --secondary: #faaf18;
            --dark: #2d2d2d;
            --light: #ffffff;
            --gray: #f7f7f7;
            --text: #333333;
            --shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
            --radius: 12px;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: var(--gray);
            color: var(--text);
        }

        header {
  background: linear-gradient(to right, #ff7e00, #ff5100); /* Gradiente arancione in stile "food" */
  padding: 15px 20px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  display: flex;
  align-items: center;
  justify-content: space-between;
}

        .logo {
  width: 180px; /* Dimensione aumentata */
  height: auto;
  transition: transform 0.3s ease;
}
 .logo-img {
            height: 120px;
            /* Dimensione ridotta dell'immagine del logo */
            width: auto;
            object-fit: contain;
            vertical-align: middle;
        }

.logo:hover {
  transform: scale(1.05); /* Leggero effetto hover */
}
.header-nav {
  display: flex;
  gap: 20px;
}

.header-nav a {
  color: white;
  text-decoration: none;
  font-weight: 500;
  padding: 8px 15px;
  border-radius: 20px;
  transition: background-color 0.3s;
}

.header-nav a:hover {
  background-color: rgba(255, 255, 255, 0.2);
}

/* Badge per indicare utente admin/capo */
.user-role-badge {
  background-color: white;
  color: #ff5100;
  padding: 4px 12px;
  border-radius: 20px;
  font-weight: bold;
  font-size: 14px;
  margin-left: 10px;
}
/* Stili specifici per l'admin */
body.admin-role header {
  background: linear-gradient(to right, #3a5bd9, #2541b2); /* Blu per admin */
}

body.admin-role .user-role-badge {
  color: #3a5bd9;
}

/* Stili specifici per il capo */
body.capo-role header {
  background: linear-gradient(to right, #ff7e00, #ff5100); /* Arancione per capo */
}

body.capo-role .user-role-badge {
  color: #ff5100;
}
/* Titolo accanto al logo */
.header-title {
  color: white;
  font-size: 28px;
  font-weight: 700;
  margin-left: 15px;
  font-family: 'Poppins', sans-serif;
}

/* Contenitore per logo e titolo */
.logo-container {
  display: flex;
  align-items: center;
}

        .content {
            max-width: 1200px;
            margin: 30px auto;
            padding: 0 20px;
        }

        .navbar {
            background-color: var(--light);
            border-radius: var(--radius);
            box-shadow: var(--shadow);
            padding: 15px 20px;
            margin-bottom: 25px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .navbar a {
            color: var(--text);
            text-decoration: none;
            font-weight: 500;
            padding: 8px 15px;
            border-radius: var(--radius);
            transition: all 0.3s ease;
        }

        .navbar a.active {
            background-color: var(--primary);
            color: var(--light);
        }

        .navbar a:hover:not(.active) {
            background-color: var(--gray);
        }

        .welcome-message {
            font-size: 24px;
            margin-bottom: 30px;
            color: var(--dark);
            background-color: var(--light);
            padding: 20px;
            border-radius: var(--radius);
            box-shadow: var(--shadow);
        }

        .welcome-message span {
            color: var(--primary);
            font-weight: bold;
        }

        .admin-actions {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
            margin-top: 30px;
        }

        .primary-btn {
            background-color: var(--primary);
            color: var(--light);
            border: none;
            padding: 15px 20px;
            border-radius: var(--radius);
            font-size: 16px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: var(--shadow);
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
        }

        .primary-btn:hover {
            background-color: #b01d00;
            transform: translateY(-2px);
        }

        @media (max-width: 768px) {
            .admin-actions {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <!-- Header Section -->
    <header>
  <div class="logo-container">
    <img src="/path/to/your/logo.png" " class="logo-img">
    <h1 class="header-title">YourBite</h1>
  </div>
  
  <div class="header-nav">
    <a href="/dashboard">Dashboard</a>
    <a href="/orders">Ordini</a>
    <a href="/menu">Menu</a>
    <a href="/customers">Clienti</a>
    <a href="/settings">Impostazioni</a>
    
    <!-- Badge per indicare ruolo utente -->
    <span class="user-role-badge">
      <!-- Mostra 'Admin' o 'Capo' in base al ruolo -->
      <?php echo $userRole === 'admin' ? 'Admin' : 'Capo'; ?>
    </span>
  </div>
</header>

    <!-- Main Content -->
    <main class="content">
        <!-- Navigation Bar -->
        <nav class="navbar">
            <div>
                <a href="/admin" class="active">Dashboard</a>
                <a href="/reports">Rapporti</a>
                <a href="/settings">Impostazioni</a>
            </div>
            <a href="#" id="logoutBtn">Logout</a>
        </nav>

        <!-- Welcome Message -->
        <h1 class="welcome-message">Benvenuto Amministratore, <span>{{username}}</span></h1>
        
        <!-- Admin Actions -->
        <div class="admin-actions">
            <button class="primary-btn"><i class="fas fa-users"></i> Gestisci Utenti</button>
            <button class="primary-btn"><i class="fas fa-utensils"></i> Gestisci Menu</button>
            <button class="primary-btn"><i class="fas fa-shopping-cart"></i> Visualizza Ordini</button>
            <button class="primary-btn"><i class="fas fa-chart-bar"></i> Statistiche Vendite</button>
        </div>
    </main>

    <script>
        document.getElementById("logoutBtn").addEventListener("click", function(event) {
            event.preventDefault();

            // Invia una richiesta di logout al server
            fetch('/logout', { 
                method: 'POST',
                credentials: 'include' // Importante per i cookie di sessione
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Reindirizza alla pagina di login
                    window.location.href = "/login";
                }
            })
            .catch(error => {
                console.error('Errore durante il logout:', error);
                alert('Errore durante il logout. Riprova.');
            });
        });
        // Script to ensure username is displayed in welcome message
document.addEventListener('DOMContentLoaded', function() {
    // Function to update username in welcome message
    function updateUsernameDisplay(username) {
        // Find all possible username display elements across the different homepages
        const usernameElements = [
            document.getElementById('username'),                        // homepage_cliente
            document.querySelector('.welcome-message span'),            // homepage_admin
            document.querySelector('.text-primary')                     // homepage_capo
        ];
        
        // Update each element if it exists and doesn't already have content
        usernameElements.forEach(element => {
            if (element && (!element.textContent || element.textContent.trim() === '{{username}}')) {
                element.textContent = username;
            }
        });
    }
    
    // First check if username is available in a data attribute or window variable
    const usernameFromPage = document.body.dataset.username;
    
    if (usernameFromPage) {
        updateUsernameDisplay(usernameFromPage);
    } else {
        // If not found in the page, fetch from API
        fetch('/api/user/info', {
            method: 'GET',
            credentials: 'include'
        })
        .then(response => response.json())
        .then(data => {
            if (data.success && data.user && data.user.username) {
                // Update username elements
                updateUsernameDisplay(data.user.username);
                
                // Store username in localStorage for future page loads
                localStorage.setItem('username', data.user.username);
            } else if (localStorage.getItem('username')) {
                // Fallback to localStorage if API fails
                updateUsernameDisplay(localStorage.getItem('username'));
            }
        })
        .catch(error => {
            console.error('Error fetching user info:', error);
            
            // Fallback to localStorage if available
            if (localStorage.getItem('username')) {
                updateUsernameDisplay(localStorage.getItem('username'));
            }
        });
    }
});
    </script>
</body>
</html>