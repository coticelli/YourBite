<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>YourBite - Gestione Menu</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        /* === VARIABILI E IMPOSTAZIONI BASE === */
        :root {
            /* NUOVI COLORI PER LA NAVBAR E ELEMENTI PRINCIPALI (MODIFICATO) */
            --navbar-red-main: #EE1B1B;
            --navbar-red-gradient-dark: #D41010;

            /* Palette colori - MODIFICATO per usare i nuovi rossi/arancioni */
            --primary: var(--navbar-red-main); /* Era #5e60ce */
            --primary-light: var(--navbar-red-main); /* Era #6930c3 */
            --primary-dark: var(--navbar-red-gradient-dark); /* Era #5390d9 */
            
            --secondary: var(--navbar-red-main); /* Era #48bfe3 */
            --secondary-light: var(--navbar-red-main); /* Era #64dfdf */
            
            --accent: var(--accent-orange); /* Era #80ffdb, ora arancione */
            
            --accent-green: #2ecc71; /* Mantenuto */
            --accent-red: #e74c3c;   /* Mantenuto */
            --accent-orange: #f39c12; /* Mantenuto */

            --dark: #1a1a2e;
            --dark-blue: #16213e; 
            --medium-dark: #252941;
            --light: #ffffff;
            --gray: #f8f9fa;
            --gray-light: #fafbfc;
            --gray-dark: #e9ecef;
            --text: #212529;
            --text-light: #6c757d;
            
            /* Effetti e animazioni */
            --shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            --shadow-lg: 0 20px 40px rgba(0, 0, 0, 0.15);
            /* --shadow-colored era basata su --primary, ora l'header usa ombra rossa diretta */
            --shadow-success: 0 8px 25px rgba(46, 204, 113, 0.25); /* Mantenuto */
            --shadow-warning: 0 8px 25px rgba(243, 156, 18, 0.25); /* Mantenuto */
            --shadow-danger: 0 8px 25px rgba(231, 76, 60, 0.25); /* Mantenuto */
            --radius: 16px;
            --radius-sm: 10px;
            --radius-lg: 24px;
            --transition-fast: all 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
            --transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
            --transition-spring: all 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Montserrat', 'Arial', sans-serif;
            scroll-behavior: smooth;
        }

        body {
            background-color: var(--gray);
            /* MODIFICATO: background-image con tonalit√† rosse */
            background-image: 
                radial-gradient(circle at 25% 10%, rgba(238, 27, 27, 0.05) 0%, transparent 40%),
                radial-gradient(circle at 75% 75%, rgba(212, 16, 16, 0.05) 0%, transparent 40%);
            color: var(--text);
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            overflow-x: hidden;
        }

        /* === EFFETTI DI BASE === */
        .glass {
            background: rgba(255, 255, 255, 0.7);
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .card-hover-effect {
            transition: var(--transition-spring);
            transform-style: preserve-3d;
            position: relative;
        }

        .card-hover-effect:hover {
            transform: translateY(-5px) rotateX(2deg) rotateY(-2deg);
             /* MODIFICATO: ombra rossa */
            box-shadow: 0 20px 40px rgba(238, 27, 27, 0.2);
        }

        .text-gradient {
            /* MODIFICATO: gradiente rosso */
            background: linear-gradient(120deg, var(--navbar-red-main), var(--navbar-red-gradient-dark));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            display: inline-block;
        }

        .btn-glow {
            position: relative;
            overflow: hidden;
        }

        .btn-glow::after {
            content: '';
            position: absolute;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            background: radial-gradient(circle at center, rgba(255, 255, 255, 0.8) 0%, transparent 70%);
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .btn-glow:hover::after {
            opacity: 0.2;
            animation: glowPulse 1.5s ease infinite;
        }

        @keyframes glowPulse {
            0% { opacity: 0; }
            50% { opacity: 0.2; }
            100% { opacity: 0; }
        }

        /* === HEADER E NAVIGAZIONE (MODIFICATO) === */
        header {
             /* MODIFICATO: sfondo rosso */
            background: linear-gradient(135deg, var(--navbar-red-main), var(--navbar-red-gradient-dark));
            padding: 0;
             /* MODIFICATO: ombra rossa */
            box-shadow: 0 8px 25px rgba(238, 27, 27, 0.25); 
            position: sticky;
            top: 0;
            z-index: 100;
            transition: var(--transition);
            height: 70px;
            display: flex;
            align-items: center;
        }

        header:hover {
            /* MODIFICATO: ombra rossa */
            box-shadow: 0 8px 30px rgba(238, 27, 27, 0.35);
        }

        header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(120deg,
                rgba(0, 0, 0, 0),
                rgba(255, 255, 255, 0.1),
                rgba(0, 0, 0, 0));
            background-size: 200% 100%;
            animation: headerShimmer 6s linear infinite;
            pointer-events: none;
        }

        @keyframes headerShimmer {
            0% { background-position: 200% 0; }
            100% { background-position: -200% 0; }
        }

        .header-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            width: 100%;
            max-width: 1600px;
            margin: 0 auto;
            padding: 0 25px;
        }

        .logo-container {
            display: flex;
            align-items: center;
            gap: 16px;
        }

        .logo {
            width: 42px;
            height: 42px;
            border-radius: 12px;
            object-fit: cover;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);
            transition: var(--transition-spring);
            position: relative;
            overflow: hidden;
            border: 2px solid rgba(255, 255, 255, 0.4);
        }

        .logo::after {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: linear-gradient(
                to bottom right,
                rgba(255, 255, 255, 0),
                rgba(255, 255, 255, 0),
                rgba(255, 255, 255, 0.3),
                rgba(255, 255, 255, 0)
            );
            transform: rotate(45deg);
            transition: var(--transition);
            opacity: 0;
        }

        .logo:hover {
            transform: scale(1.1) rotate(5deg);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.25);
            border-color: rgba(255, 255, 255, 0.8);
        }

        .logo:hover::after {
            animation: logoPulse 1.5s ease-out infinite;
            opacity: 1;
        }

        @keyframes logoPulse {
            0% { transform: translateX(-100%) rotate(45deg); }
            100% { transform: translateX(100%) rotate(45deg); }
        }

        .header-title {
            color: white;
            font-size: 1.5rem;
            font-weight: 700;
            margin: 0;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);
            position: relative;
            letter-spacing: 0.5px;
        }

        .header-title::after {
            content: '';
            display: block;
            width: 0;
            height: 2px;
            background: var(--accent); /* Ora arancione */
            transition: var(--transition);
            position: absolute;
            bottom: -5px;
            left: 0;
        }

        .header-title:hover::after {
            width: 100%;
        }

        .header-nav {
            display: flex;
            gap: 8px;
            align-items: center;
        }

        .header-nav a {
            color: white;
            text-decoration: none;
            font-weight: 500;
            padding: 10px 16px;
            border-radius: 12px;
            transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
            font-size: 14px;
            letter-spacing: 0.5px;
            position: relative;
            overflow: hidden;
            background-color: rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(255, 255, 255, 0.1);
            display: flex;
            align-items: center;
            gap: 6px;
            backdrop-filter: blur(5px);
        }

        .header-nav a i {
            transition: transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
            font-size: 16px;
        }

        .header-nav a::before {
            content: '';
            position: absolute;
            width: 100%;
            height: 100%;
            background: linear-gradient(120deg,
                rgba(255, 255, 255, 0),
                rgba(255, 255, 255, 0.2),
                rgba(255, 255, 255, 0));
            top: 0;
            left: -100%;
            transition: var(--transition);
            transform: skewX(-15deg);
        }

        .header-nav a:hover {
            background-color: rgba(255, 255, 255, 0.15);
            transform: translateY(-5px);
            border-color: rgba(255, 255, 255, 0.3);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        }

        .header-nav a:hover i {
            transform: scale(1.2) rotate(10deg);
        }

        .header-nav a:hover::before {
            left: 100%;
            transition: all 0.7s ease;
        }

        .header-nav a.active {
            background-color: rgba(255, 255, 255, 0.2);
            font-weight: 600;
            border-color: rgba(255, 255, 255, 0.4);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

        /* Stile per il pulsante Homepage nella navbar */
        .header-nav a.home-button {
            background-color: rgba(255, 255, 255, 0.08);
            border-color: rgba(255, 255, 255, 0.25);
            position: relative;
            overflow: hidden;
        }

        .header-nav a.home-button::after {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: linear-gradient(
                to bottom right,
                rgba(255, 255, 255, 0),
                rgba(255, 255, 255, 0.1),
                rgba(255, 255, 255, 0)
            );
            transform: rotate(45deg);
            animation: homeButtonShimmer 3s infinite;
            opacity: 0.5;
        }

        @keyframes homeButtonShimmer {
            0% { transform: translateX(-100%) rotate(45deg); }
            50% { transform: translateX(100%) rotate(45deg); }
            100% { transform: translateX(-100%) rotate(45deg); }
        }

        .header-nav a.home-button:hover {
            background-color: rgba(255, 255, 255, 0.2);
            transform: translateY(-5px) scale(1.05);
            border-color: rgba(255, 255, 255, 0.4);
        }

        .header-nav a.home-button i {
            color: var(--accent); /* Ora arancione */
            transition: var(--transition-spring);
        }

        .header-nav a.home-button:hover i {
            transform: scale(1.2);
        }

        .user-role-badge {
            background-color: rgba(255, 255, 255, 0.15);
            color: white;
            padding: 8px 16px;
            border-radius: 12px;
            font-weight: 600;
            font-size: 14px;
            letter-spacing: 0.5px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            display: flex;
            align-items: center;
            gap: 8px;
            backdrop-filter: blur(5px);
            animation: badgePulse 3s infinite alternate;
            border: 2px solid rgba(255, 255, 255, 0.3);
            margin-left: 10px;
        }

        @keyframes badgePulse {
            0% { box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1); }
            100% { box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2); }
        }

        .user-role-badge i {
            font-size: 14px;
            animation: rotateIcon 5s linear infinite;
        }

        @keyframes rotateIcon {
            0% { transform: rotate(0deg); }
            25% { transform: rotate(10deg); }
            50% { transform: rotate(0deg); }
            75% { transform: rotate(-10deg); }
            100% { transform: rotate(0deg); }
        }

        #notification-badge {
            position: absolute;
            top: -5px;
            right: -5px;
            background: linear-gradient(135deg, #ff6b6b, #e63946);
            color: white;
            border-radius: 50%;
            width: 22px;
            height: 22px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 12px;
            font-weight: bold;
            box-shadow: 0 4px 10px rgba(230, 57, 70, 0.3);
            border: 2px solid white;
            animation: notificationPulse 1.5s infinite alternate;
        }

        @keyframes notificationPulse {
            from { transform: scale(1); }
            to { transform: scale(1.15); }
        }

        .user-controls {
            display: flex;
            align-items: center;
            margin-left: 20px;
        }

        .username {
            color: white;
            font-weight: 500;
            margin-right: 15px;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);
            letter-spacing: 0.3px;
        }

        .logout-btn {
            background: rgba(255, 255, 255, 0.15);
            border: 1px solid rgba(255, 255, 255, 0.3);
            color: white;
            padding: 8px 15px;
            border-radius: var(--radius-sm);
            cursor: pointer;
            font-size: 14px;
            font-weight: 500;
            transition: var(--transition-spring);
            display: flex;
            align-items: center;
            gap: 5px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            position: relative;
        }

        .logout-btn::before {
            content: '';
            position: absolute;
            width: 100%;
            height: 100%;
            background: linear-gradient(120deg,
                rgba(255, 255, 255, 0),
                rgba(255, 255, 255, 0.2),
                rgba(255, 255, 255, 0));
            top: 0;
            left: -100%;
            transition: var(--transition);
            transform: skewX(-15deg);
        }

        .logout-btn:hover {
            background: rgba(255, 255, 255, 0.25);
            transform: translateY(-3px);
            box-shadow: 0 8px 15px rgba(0, 0, 0, 0.15);
        }

        .logout-btn:hover::before {
            left: 100%;
            transition: all 0.7s ease;
        }

        /* === PARTICLES BACKGROUND === */
        .particles {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            pointer-events: none;
            overflow: hidden;
        }

        .particle {
            position: absolute;
            width: 5px;
            height: 5px;
            /* MODIFICATO: rosso */
            background-color: rgba(238, 27, 27, 0.1);
            border-radius: 50%;
        }
        .particle:nth-child(odd) {
             background-color: rgba(212, 16, 16, 0.15); 
        }


        @keyframes particleFloat {
            0% { transform: translate(0, 0); }
            100% { transform: translate(80px, -80px); }
        }
        
        @keyframes particleFade {
            0% { opacity: 0.05; }
            50% { opacity: 0.2; }
            100% { opacity: 0.05; }
        }

        /* === CUSTOMIZED SCROLLBAR === */
        ::-webkit-scrollbar {
            width: 8px;
            height: 8px;
        }
        
        ::-webkit-scrollbar-track {
            background: var(--gray-light);
            border-radius: 10px;
        }
        
        ::-webkit-scrollbar-thumb {
             /* MODIFICATO: rosso */
            background: linear-gradient(var(--navbar-red-main), var(--navbar-red-gradient-dark));
            border-radius: 10px;
            transition: var(--transition);
        }
        
        ::-webkit-scrollbar-thumb:hover {
             /* MODIFICATO: rosso */
            background: linear-gradient(var(--navbar-red-gradient-dark), var(--navbar-red-gradient-dark));
        }

        /* === MENU CONTAINER === */
        .menu-container {
            padding: 30px 25px;
            max-width: 1400px;
            margin: 0 auto;
            width: 100%;
            animation: fadeIn 0.6s ease-out;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .menu-header {
            margin-bottom: 30px;
        }

        .menu-header h1 {
            font-size: 32px;
            font-weight: 700;
            margin-bottom: 10px;
            position: relative;
            display: inline-block;
        }

        .menu-header h1::after {
            content: '';
            position: absolute;
            width: 50%;
            height: 4px;
             /* MODIFICATO: rosso */
            background: linear-gradient(90deg, var(--navbar-red-main), var(--navbar-red-gradient-dark));
            bottom: -8px;
            left: 0;
            border-radius: 2px;
        }

        .menu-header p {
            font-size: 16px;
            color: var(--text-light);
            font-weight: 500;
        }

        /* === MENU ACTIONS === */
        .menu-actions {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
            background: white;
            padding: 20px 25px;
            border-radius: var(--radius);
            box-shadow: var(--shadow);
            transition: var(--transition);
            position: relative;
            overflow: hidden;
            border: 1px solid rgba(0, 0, 0, 0.03);
            flex-wrap: wrap; /* Added for responsiveness */
            gap: 15px; /* Added for spacing on wrap */
        }

        .menu-actions:hover {
            box-shadow: var(--shadow-lg);
            transform: translateY(-5px);
        }

        .add-item-btn {
             /* MODIFICATO: rosso */
            background: linear-gradient(135deg, var(--navbar-red-main), var(--navbar-red-gradient-dark));
            color: white;
            border: none;
            padding: 12px 22px;
            border-radius: var(--radius-sm);
            cursor: pointer;
            font-weight: 600;
            transition: var(--transition-spring);
            display: flex;
            align-items: center;
            gap: 10px;
             /* MODIFICATO: ombra rossa */
            box-shadow: 0 5px 15px rgba(238, 27, 27, 0.2);
            position: relative;
            overflow: hidden;
        }

        .add-item-btn::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: linear-gradient(
                to bottom right,
                rgba(255, 255, 255, 0),
                rgba(255, 255, 255, 0.1),
                rgba(255, 255, 255, 0)
            );
            transform: rotate(45deg);
            transition: var(--transition);
            opacity: 0;
        }

        .add-item-btn:hover {
            transform: translateY(-3px);
             /* MODIFICATO: ombra rossa */
            box-shadow: 0 8px 25px rgba(238, 27, 27, 0.3);
        }

        .add-item-btn:hover::before {
            animation: btnShimmer 1.5s ease-out;
            opacity: 1;
        }

        @keyframes btnShimmer {
            0% { transform: translateX(-100%) rotate(45deg); }
            100% { transform: translateX(100%) rotate(45deg); }
        }

        .filter-select {
            position: relative;
            min-width: 200px;
            max-width: 100%; /* Ensure it fits on smaller screens */
        }

        .filter-select select {
            appearance: none;
            width: 100%;
            padding: 12px 20px;
            padding-right: 40px;
            border-radius: var(--radius-sm);
            border: 2px solid var(--gray-dark);
            background: var(--gray-light);
            color: var(--text);
            font-size: 15px;
            transition: var(--transition);
            cursor: pointer;
            font-weight: 500;
        }

        .filter-select select:focus {
            outline: none;
            /* MODIFICATO: rosso */
            border-color: var(--navbar-red-main);
            box-shadow: 0 0 0 3px rgba(238, 27, 27, 0.2);
            background-color: white;
        }

        .filter-select::after {
            content: '\f078';
            font-family: 'Font Awesome 5 Free';
            font-weight: 900;
            position: absolute;
            right: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: var(--text-light);
            pointer-events: none;
            transition: var(--transition);
        }

        .filter-select:hover::after {
            /* MODIFICATO: rosso */
            color: var(--navbar-red-main);
            transform: translateY(-50%) rotate(180deg);
        }

        /* === CATEGORIES NAVIGATION === */
        .categories-nav {
            display: flex;
            gap: 10px;
            margin-bottom: 25px;
            flex-wrap: wrap;
            padding: 5px 0;
        }

        .category-btn {
            padding: 10px 20px;
            border: 2px solid var(--gray-dark);
            border-radius: 25px;
            background: white;
            color: var(--text);
            cursor: pointer;
            transition: var(--transition-spring);
            font-weight: 500;
            font-size: 14px;
            position: relative;
            overflow: hidden;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .category-btn i {
            font-size: 16px;
            color: var(--text-light);
            transition: var(--transition);
        }

        .category-btn::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: linear-gradient(
                to bottom right,
                rgba(255, 255, 255, 0),
                rgba(255, 255, 255, 0.1),
                rgba(255, 255, 255, 0)
            );
            transform: rotate(45deg);
            transition: var(--transition);
            opacity: 0;
        }

        .category-btn:hover {
            transform: translateY(-3px);
            box-shadow: var(--shadow);
            /* MODIFICATO: rosso */
            border-color: var(--navbar-red-main);
            color: var(--navbar-red-main);
        }

        .category-btn:hover i {
            /* MODIFICATO: rosso */
            color: var(--navbar-red-main);
            transform: scale(1.2) rotate(5deg);
        }

        .category-btn:hover::before {
            animation: btnShimmer 1.5s ease-out;
            opacity: 1;
        }

        .category-btn.active {
            /* MODIFICATO: rosso */
            background: linear-gradient(135deg, var(--navbar-red-main), var(--navbar-red-gradient-dark));
            color: white;
            border-color: var(--navbar-red-main);
            box-shadow: 0 5px 15px rgba(238, 27, 27, 0.3);
        }

        .category-btn.active i {
            color: white;
        }

        /* === MENU GRID === */
        .menu-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 25px;
        }

        .menu-item {
            background: white;
            border-radius: var(--radius);
            overflow: hidden;
            box-shadow: var(--shadow);
            transition: var(--transition-spring);
            transform: translateZ(0);
            position: relative;
            border: 1px solid rgba(0, 0, 0, 0.03);
             display: flex; 
             flex-direction: column;
        }

        .menu-item:hover {
            transform: translateY(-10px);
            box-shadow: var(--shadow-lg);
        }

        .menu-item-image {
            height: 200px;
            background-size: cover;
            background-position: center;
            position: relative;
            overflow: hidden;
            transition: var(--transition);
             flex-shrink: 0;
        }

        .menu-item-image::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(to bottom, transparent 70%, rgba(0, 0, 0, 0.5));
            opacity: 0.7;
            transition: var(--transition);
        }

        .menu-item:hover .menu-item-image::before {
            opacity: 0.9;
        }

        .menu-item:hover .menu-item-image {
            transform: scale(1.05);
        }

        .menu-item-details {
            padding: 20px;
            position: relative;
             display: flex; 
             flex-direction: column;
             flex-grow: 1;
        }

        .menu-item-title {
            display: flex;
            justify-content: space-between;
            margin-bottom: 15px;
            align-items: flex-start; 
            flex-wrap: wrap; 
            gap: 10px; 
        }

        .menu-item-title h3 {
            margin: 0;
            font-size: 18px;
            font-weight: 600;
            color: var(--text);
            display: flex;
            align-items: center;
            gap: 10px;
             flex-grow: 1;
             flex-basis: 60%; 
             line-height: 1.3;
        }
         .menu-item-title h3 .status-badge {
             margin-left: 5px; 
         }

        .menu-item-price {
            font-weight: 700;
            font-size: 18px;
            /* MODIFICATO: rosso */
            color: var(--navbar-red-main);
            background: linear-gradient(120deg, var(--navbar-red-main), var(--navbar-red-gradient-dark));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            position: relative;
            white-space: nowrap; 
             padding: 5px; 
             margin-left: auto; 
             flex-shrink: 0; 
        }

        .menu-item-price::before {
            content: '';
            position: absolute;
            top: 0px; right: 0px; bottom: 0px; left: 0px;
             /* MODIFICATO: rosso */
            background: linear-gradient(120deg, var(--navbar-red-main), var(--navbar-red-gradient-dark));
            opacity: 0.1;
            border-radius: var(--radius-sm);
            z-index: -1;
            transition: var(--transition);
        }

        .menu-item:hover .menu-item-price::before {
            opacity: 0.2;
            transform: scale(1.05);
        }

        .menu-item-description {
            color: var(--text-light);
            font-size: 14px;
            margin-bottom: 20px;
            line-height: 1.6;
             flex-grow: 1; 
        }

        .active-badge, .inactive-badge {
            padding: 5px 12px;
            border-radius: 30px;
            font-size: 12px;
            font-weight: 600;
            display: inline-flex; 
            align-items: center;
            gap: 5px;
            transition: var(--transition);
            white-space: nowrap;
             vertical-align: middle; 
        }


        .active-badge { /* Verde ok */
            background-color: rgba(46, 204, 113, 0.15);
            color: var(--accent-green);
        }

        .inactive-badge { /* Grigio ok */
            background-color: rgba(0, 0, 0, 0.05);
            color: var(--text-light);
        }

        .active-badge i, .inactive-badge i {
            font-size: 12px;
        }

        .menu-item-actions {
            display: flex;
            justify-content: flex-end; 
             gap: 10px; 
            margin-top: auto; 
             padding-top: 15px; 
        }


        .action-btn { 
            padding: 10px 15px;
            border: none;
            border-radius: var(--radius-sm);
            font-size: 13px;
            font-weight: 600;
            cursor: pointer;
            transition: var(--transition-spring);
            display: inline-flex; 
            align-items: center;
            gap: 8px;
            position: relative;
            overflow: hidden;
             line-height: 1; 
        }


        .action-btn::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: linear-gradient(
                to bottom right,
                rgba(255, 255, 255, 0),
                rgba(255, 255, 255, 0.3),
                rgba(255, 255, 255, 0)
            );
            transform: rotate(45deg);
            transition: var(--transition);
            opacity: 0;
        }

        .edit-btn {
             /* MODIFICATO: rosso */
            background-color: rgba(238, 27, 27, 0.1);
            color: var(--navbar-red-main);
        }

        .delete-btn {
            /* Mantenuto rosso per semantica 'delete' */
            background-color: rgba(231, 76, 60, 0.1);
            color: var(--accent-red);
        }

        .action-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

        .edit-btn:hover {
            /* MODIFICATO: rosso */
            background-color: var(--navbar-red-main);
            color: white;
        }

        .delete-btn:hover {
            /* Mantenuto rosso */
            background-color: var(--accent-red);
            color: white;
        }

        .action-btn:hover::before {
            animation: btnShimmer 1.5s ease-out;
            opacity: 1;
        }

        .menu-item-badge {
            position: absolute;
            top: 15px;
            right: 15px;
            padding: 8px 15px;
            border-radius: 30px;
            font-size: 12px;
            font-weight: 700;
            color: white;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.15);
            z-index: 5;
        }

        .menu-item-badge.bestseller { /* Arancione ok */
            background: linear-gradient(135deg, #f7b733, #fc4a1a);
        }

        .menu-item-badge.new {
             /* MODIFICATO: rosso */
            background: linear-gradient(135deg, var(--navbar-red-main), var(--navbar-red-gradient-dark));
        }

        .menu-item-badge.promo { /* Verde ok */
            background: linear-gradient(135deg, var(--accent-green), #27ae60);
        }

        .menu-item-category {
            position: absolute;
            top: 15px;
            left: 15px;
            padding: 6px 12px;
            background-color: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            font-size: 12px;
            font-weight: 600;
            /* MODIFICATO: rosso */
            color: var(--navbar-red-main);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            z-index: 5;
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .menu-item-category i {
            font-size: 12px;
        }

        /* === TOAST NOTIFICATION === */
        .toast-notification {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: white;
            border-radius: var(--radius);
            padding: 15px 20px;
            box-shadow: var(--shadow-lg);
            z-index: 1000;
            display: flex;
            align-items: center;
            gap: 15px;
            transform: translateY(100px);
            opacity: 0;
            transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
            max-width: 350px;
        }

        .toast-notification.show {
            transform: translateY(0);
            opacity: 1;
        }

        .toast-icon {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 20px;
            flex-shrink: 0;
        }

        .toast-success .toast-icon { /* Verde ok */
            background-color: rgba(46, 204, 113, 0.15);
            color: var(--accent-green);
        }

        .toast-error .toast-icon { /* Rosso ok */
            background-color: rgba(231, 76, 60, 0.15);
            color: var(--accent-red);
        }

        .toast-warning .toast-icon { /* Arancione ok */
            background-color: rgba(243, 156, 18, 0.15);
            color: var(--accent-orange);
        }
        .toast-info .toast-icon { /* Rosso per info */
             background-color: rgba(238, 27, 27, 0.15);
             color: var(--navbar-red-main);
        }


        .toast-content {
            flex-grow: 1;
        }

        .toast-title {
            font-weight: 600;
            margin-bottom: 5px;
        }

        .toast-message {
            font-size: 14px;
            color: var(--text-light);
        }

        .toast-close {
            cursor: pointer;
            font-size: 18px;
            color: var(--text-light);
            transition: var(--transition);
            padding: 5px;
        }

        .toast-close:hover {
            color: var(--text);
            transform: rotate(90deg);
        }

        /* === MODAL (Form) === */
        .modal-overlay {
            position: fixed; top: 0; left: 0; width: 100%; height: 100%;
            background-color: rgba(0, 0, 0, 0.6); 
            backdrop-filter: blur(8px); 
            z-index: 1000; display: flex; align-items: center; justify-content: center; 
            opacity: 0; visibility: hidden; transition: opacity 0.3s ease, visibility 0.3s ease;
            padding: 15px; 
        }

        .modal-overlay.open { opacity: 1; visibility: visible; }

        .modal {
            width: 100%; max-width: 600px; 
            background-color: white; border-radius: var(--radius-lg); 
            overflow: hidden; box-shadow: var(--shadow-lg);
            transform: scale(0.95); opacity: 0;
            transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
            display: flex; flex-direction: column; 
             max-height: 90vh; 
        }

        .modal-overlay.open .modal { transform: scale(1); opacity: 1; }

        .modal-header {
            padding: 20px 25px;
             /* MODIFICATO: rosso */
            background: linear-gradient(135deg, var(--navbar-red-main), var(--navbar-red-gradient-dark));
            color: white; position: relative; flex-shrink: 0; 
             display: flex; justify-content: space-between; align-items: center;
        }

        .modal-header h3 { margin: 0; font-size: 20px; font-weight: 600; line-height: 1.3; }

        .modal-close {
            position: static; background: transparent; border: none;
            color: white; font-size: 28px; cursor: pointer;
            transition: var(--transition); padding: 5px; line-height: 1; margin-left: 15px; 
        }

        .modal-close:hover {
            transform: rotate(90deg);
             color: var(--accent); /* Ora arancione */
        }

        .modal-body {
            padding: 25px; overflow-y: auto; flex-grow: 1; 
             max-height: calc(90vh - 140px); 
             scrollbar-width: thin; 
             scrollbar-color: var(--navbar-red-main) var(--gray-light); /* Firefox */
        }
         .modal-body::-webkit-scrollbar { width: 6px; }
         .modal-body::-webkit-scrollbar-track { background: var(--gray-light); border-radius: 3px;}
         .modal-body::-webkit-scrollbar-thumb { 
             /* MODIFICATO: rosso */
             background-color: var(--navbar-red-main); 
             border-radius: 3px; 
         }


        .modal-footer {
            padding: 20px 25px; display: flex; justify-content: flex-end; gap: 15px;
            border-top: 1px solid var(--gray-dark); flex-shrink: 0; 
             background-color: var(--gray-light);
        }

        .form-group { margin-bottom: 20px; }

        .form-label {
            display: block; margin-bottom: 8px; font-weight: 500;
            color: var(--text); font-size: 14px; 
        }

        .form-control {
            width: 100%; padding: 12px 15px; border: 2px solid var(--gray-dark);
            border-radius: var(--radius-sm); font-size: 15px; transition: var(--transition);
        }
         .form-control[type="number"] { appearance: textfield; -moz-appearance: textfield; }
         input[type="number"]::-webkit-inner-spin-button,
         input[type="number"]::-webkit-outer-spin-button { -webkit-appearance: none; margin: 0; }


        .form-control:focus {
            outline: none;
             /* MODIFICATO: rosso */
            border-color: var(--navbar-red-main);
            box-shadow: 0 0 0 3px rgba(238, 27, 27, 0.2);
        }

         /* Styling for modal buttons */
         .btn {
             padding: 10px 20px; border-radius: var(--radius-sm);
             cursor: pointer; font-weight: 600; transition: var(--transition-spring);
         }
        .btn-primary {
             /* MODIFICATO: rosso */
            background: var(--navbar-red-main);
            color: white; border: none; 
             /* MODIFICATO: ombra rossa */
            box-shadow: 0 5px 15px rgba(238, 27, 27, 0.25);
        }
         .btn-primary:hover {
             /* MODIFICATO: rosso */
             background: var(--navbar-red-gradient-dark);
             transform: translateY(-2px);
              /* MODIFICATO: ombra rossa */
             box-shadow: 0 10px 25px rgba(238, 27, 27, 0.3);
         }

        .btn-outline-primary {
             background: transparent; 
             /* MODIFICATO: rosso */
             color: var(--navbar-red-main);
             border: 2px solid var(--navbar-red-main);
        }
        .btn-outline-primary:hover {
             /* MODIFICATO: rosso */
            background: rgba(238, 27, 27, 0.1);
             transform: translateY(-2px);
         }


        /* === ANIMATIONS === */
        .animate-in {
            animation: popIn 0.5s cubic-bezier(0.34, 1.56, 0.64, 1) forwards;
            opacity: 0;
            transform: scale(0.9);
        }
         @keyframes popIn {
            from { opacity: 0; transform: scale(0.9); }
            to { opacity: 1; transform: scale(1); }
         }

        .animate-delay-1 { animation-delay: 0.1s; }
        .animate-delay-2 { animation-delay: 0.2s; }
        .animate-delay-3 { animation-delay: 0.3s; }
         .animate-item { animation: popIn 0.3s ease-out forwards; }


        /* === RESPONSIVE DESIGN === */
        @media (max-width: 1200px) {
            .header-nav a span { display: none; }
            .header-nav a { padding: 10px; font-size: 16px; justify-content: center; }
            .header-nav a i { margin: 0; }
            .user-role-badge { padding: 8px 12px; }
            .menu-grid { grid-template-columns: repeat(auto-fill, minmax(250px, 1fr)); }
        }

        @media (max-width: 992px) {
            .header-container { flex-wrap: wrap; justify-content: center; gap: 10px; }
            .logo-container { margin-right: auto; }
            .user-controls { margin-left: auto; }
            header { height: auto; padding: 10px 0; } /* Gi√† modificato per colore */
            .menu-container { padding: 20px 15px; }
            .menu-actions { flex-direction: column; gap: 15px; align-items: flex-start; }
            .filter-select { width: 100%; }
        }

        @media (max-width: 768px) {
            .header-container { padding: 0 15px; flex-direction: column; gap: 15px; }
            .header-nav { flex-wrap: wrap; justify-content: center; margin: 10px 0; }
            .logo-container, .user-controls { margin: 0; justify-content: center; width: 100%; }
            .categories-nav { overflow-x: auto; flex-wrap: nowrap; padding-bottom: 15px; -webkit-overflow-scrolling: touch; scrollbar-width: none; }
            .categories-nav::-webkit-scrollbar { display: none; }
            .category-btn { white-space: nowrap; }
            .menu-grid { grid-template-columns: 1fr; } 
            .menu-item { margin: 0; max-width: none; } 
            .menu-header h1 { font-size: 24px; }
        }

        @media (max-width: 480px) {
            .menu-actions { padding: 15px; }
            .categories-nav { margin-bottom: 15px; }
            .add-item-btn { width: 100%; justify-content: center; }
             .modal { max-width: 95%; } 
             .modal-body { padding: 15px; max-height: calc(90vh - 130px); }
             .modal-footer { padding: 15px; flex-direction: column; gap: 10px; }
             .modal-footer button { width: 100%; }
             .form-group { margin-bottom: 15px; }
        }
    </style>
</head>
<body class="capo-role">
    <!-- Particle Background -->
    <div class="particles" id="particles"></div>

    <!-- Header migliorato -->
    <header>
        <div class="header-container">
            <div class="logo-container">
                <img src="/img/logo.png" alt="YourBite Logo" class="logo">
                <h1 class="header-title">YourBite</h1>
            </div>

            <div class="header-nav">
                <!-- Pulsante Homepage con effetto speciale -->
                <a href="/homepage_capo" class="home-button">
                    <i class="fas fa-home"></i> <span>Homepage</span>
                </a>
                <a href="/dashboard">
                    <i class="fas fa-chart-line"></i> <span>Dashboard</span>
                </a>
                <a href="/ordini">
                    <i class="fas fa-shopping-bag"></i> <span>Ordini</span>
                </a>
                <a href="/menu" class="active"> <!-- Gi√† active per questa pagina -->
                    <i class="fas fa-utensils"></i> <span>Menu</span>
                </a>
                <a href="/clienti">
                    <i class="fas fa-users"></i> <span>Clienti</span>
                </a>
                <a href="/impostazioni">
                    <i class="fas fa-cog"></i> <span>Impostazioni</span>
                </a>

                <div style="position: relative; margin-left: 10px;">
                    <span id="notification-badge" style="display: none;">0</span>
                    <span class="user-role-badge">
                        <i class="fas fa-crown"></i> Capo
                    </span>
                </div>
            </div>

            <div class="user-controls">
                <span class="username">{{user.username}}</span>
                <button class="logout-btn btn-glow" onclick="logout()">
                    <i class="fas fa-sign-out-alt"></i> Logout
                </button>
            </div>
        </div>
    </header>

    <div class="menu-container">
        <!-- Menu Header -->
        <div class="menu-header animate-in">
            <h1 class="text-gradient">Gestione Menu</h1> <!-- Ora rosso -->
            <p>Aggiungi, modifica o rimuovi prodotti dal tuo menu</p>
        </div>

        <!-- Menu Actions -->
        <div class="menu-actions animate-in animate-delay-1">
            <button class="add-item-btn btn-glow" id="addProductBtn"> <!-- Rosso -->
                <i class="fas fa-plus-circle"></i> Aggiungi Prodotto
            </button>
            <div class="filter-select">
                <select id="product-filter">
                    <option value="all">Tutti i prodotti</option>
                    <option value="active">Prodotti attivi</option>
                    <option value="inactive">Prodotti inattivi</option>
                    <option value="bestseller">Bestseller</option>
                    <option value="new">Nuovi</option>
                    <option value="promo">In promo</option>
                </select>
            </div>
        </div>

        <!-- Categories Nav -->
        <div class="categories-nav animate-in animate-delay-2">
            <button class="category-btn active" data-category="all"> <!-- Rosso quando attivo -->
                <i class="fas fa-border-all"></i> Tutti
            </button>
            <button class="category-btn" data-category="panini">
                <i class="fas fa-hamburger"></i> Panini
            </button>
            <button class="category-btn" data-category="pizze">
                <i class="fas fa-pizza-slice"></i> Pizze
            </button>
            <button class="category-btn" data-category="patatine">
                <i class="fas fa-bacon"></i> Contorni
            </button>
            <button class="category-btn" data-category="bevande">
                <i class="fas fa-cocktail"></i> Bevande
            </button>
            <button class="category-btn" data-category="dessert">
                <i class="fas fa-ice-cream"></i> Dessert
            </button>
        </div>

        <!-- Menu Grid -->
        <div class="menu-grid animate-in animate-delay-3" id="menu-grid-container">
            <!-- Menu Item 1 -->
            <div class="menu-item card-hover-effect" data-category="panini" data-id="1" data-badge="bestseller">
                <div class="menu-item-badge bestseller">Bestseller</div>
                <div class="menu-item-category"><i class="fas fa-hamburger"></i> Panino</div> <!-- Rosso -->
                <div class="menu-item-image" style="background-image: url('https://source.unsplash.com/300x200/?burger')" data-original-image="https://source.unsplash.com/300x200/?burger"></div>
                <div class="menu-item-details">
                    <div class="menu-item-title">
                        <h3>
                            Burger Classic
                            <span class="active-badge status-badge" data-status="active"><i class="fas fa-check-circle"></i> Attivo</span>
                        </h3>
                        <div class="menu-item-price">‚Ç¨8.90</div> <!-- Rosso -->
                    </div>
                    <div class="menu-item-description">
                        Hamburger di manzo 150g, insalata iceberg, pomodoro fresco, cipolla rossa caramellata e la nostra salsa speciale.
                    </div>
                    <div class="menu-item-actions">
                        <button class="action-btn edit-btn"><i class="fas fa-edit"></i> Modifica</button> <!-- Rosso -->
                        <button class="action-btn delete-btn"><i class="fas fa-trash-alt"></i> Elimina</button> <!-- Rosso -->
                    </div>
                </div>
            </div>

            <!-- Menu Item 2 -->
            <div class="menu-item card-hover-effect" data-category="pizze" data-id="2">
                <div class="menu-item-category"><i class="fas fa-pizza-slice"></i> Pizza</div>
                <div class="menu-item-image" style="background-image: url('https://source.unsplash.com/300x200/?margherita%20pizza')" data-original-image="https://source.unsplash.com/300x200/?margherita%20pizza"></div>
                <div class="menu-item-details">
                    <div class="menu-item-title">
                        <h3>
                            Pizza Margherita
                            <span class="active-badge status-badge" data-status="active"><i class="fas fa-check-circle"></i> Attivo</span>
                        </h3>
                        <div class="menu-item-price">‚Ç¨9.50</div>
                    </div>
                    <div class="menu-item-description">
                        Pizza tradizionale con pomodoro San Marzano, mozzarella fior di latte, basilico fresco e olio extra vergine d'oliva.
                    </div>
                    <div class="menu-item-actions">
                        <button class="action-btn edit-btn"><i class="fas fa-edit"></i> Modifica</button>
                        <button class="action-btn delete-btn"><i class="fas fa-trash-alt"></i> Elimina</button>
                    </div>
                </div>
            </div>

            <!-- Menu Item 3 -->
            <div class="menu-item card-hover-effect" data-category="patatine" data-id="3" data-badge="promo">
                <div class="menu-item-badge promo">Promo</div>
                <div class="menu-item-category"><i class="fas fa-bacon"></i> Contorno</div>
                <div class="menu-item-image" style="background-image: url('https://source.unsplash.com/300x200/?french%20fries')" data-original-image="https://source.unsplash.com/300x200/?french%20fries"></div>
                <div class="menu-item-details">
                    <div class="menu-item-title">
                        <h3>
                            Patatine Fritte
                            <span class="active-badge status-badge" data-status="active"><i class="fas fa-check-circle"></i> Attivo</span>
                        </h3>
                        <div class="menu-item-price">‚Ç¨3.50</div>
                    </div>
                    <div class="menu-item-description">
                        Patatine tagliate a mano, fritte due volte per una croccantezza perfetta, servite con ketchup o maionese a scelta.
                    </div>
                    <div class="menu-item-actions">
                        <button class="action-btn edit-btn"><i class="fas fa-edit"></i> Modifica</button>
                        <button class="action-btn delete-btn"><i class="fas fa-trash-alt"></i> Elimina</button>
                    </div>
                </div>
            </div>

            <!-- Menu Item 4 -->
            <div class="menu-item card-hover-effect" data-category="panini" data-id="4">
                <div class="menu-item-category"><i class="fas fa-hamburger"></i> Panino</div>
                <div class="menu-item-image" style="background-image: url('https://source.unsplash.com/300x200/?chicken%20burger')" data-original-image="https://source.unsplash.com/300x200/?chicken%20burger"></div>
                <div class="menu-item-details">
                    <div class="menu-item-title">
                        <h3>
                            Chicken Burger
                            <span class="active-badge status-badge" data-status="active"><i class="fas fa-check-circle"></i> Attivo</span>
                        </h3>
                        <div class="menu-item-price">‚Ç¨7.90</div>
                    </div>
                    <div class="menu-item-description">
                        Hamburger di pollo croccante, insalata fresca, pomodoro, cipolla rossa e la nostra salsa speciale ai peperoni.
                    </div>
                    <div class="menu-item-actions">
                        <button class="action-btn edit-btn"><i class="fas fa-edit"></i> Modifica</button>
                        <button class="action-btn delete-btn"><i class="fas fa-trash-alt"></i> Elimina</button>
                    </div>
                </div>
            </div>

            <!-- Menu Item 5 -->
            <div class="menu-item card-hover-effect" data-category="bevande" data-id="5">
                <div class="menu-item-category"><i class="fas fa-cocktail"></i> Bevanda</div>
                <div class="menu-item-image" style="background-image: url('https://source.unsplash.com/300x200/?cola%20can')" data-original-image="https://source.unsplash.com/300x200/?cola%20can"></div>
                <div class="menu-item-details">
                    <div class="menu-item-title">
                        <h3>
                            Cola
                            <span class="active-badge status-badge" data-status="active"><i class="fas fa-check-circle"></i> Attivo</span>
                        </h3>
                        <div class="menu-item-price">‚Ç¨2.50</div>
                    </div>
                    <div class="menu-item-description">
                        Bevanda gassata in lattina 33cl, servita ghiacciata con una fetta di limone.
                    </div>
                    <div class="menu-item-actions">
                        <button class="action-btn edit-btn"><i class="fas fa-edit"></i> Modifica</button>
                        <button class="action-btn delete-btn"><i class="fas fa-trash-alt"></i> Elimina</button>
                    </div>
                </div>
            </div>

            <!-- Menu Item 6 -->
            <div class="menu-item card-hover-effect" data-category="dessert" data-id="6" data-badge="new">
                <div class="menu-item-badge new">Nuovo</div> <!-- Rosso -->
                <div class="menu-item-category"><i class="fas fa-ice-cream"></i> Dessert</div>
                <div class="menu-item-image" style="background-image: url('https://source.unsplash.com/300x200/?tiramisu%20dessert')" data-original-image="https://source.unsplash.com/300x200/?tiramisu%20dessert"></div>
                <div class="menu-item-details">
                    <div class="menu-item-title">
                        <h3>
                            Tiramis√π
                            <span class="inactive-badge status-badge" data-status="inactive"><i class="fas fa-clock"></i> Inattivo</span>
                        </h3>
                        <div class="menu-item-price">‚Ç¨4.90</div>
                    </div>
                    <div class="menu-item-description">
                        Classico dolce italiano con crema al mascarpone, savoiardi bagnati nel caff√® e cacao in polvere.
                    </div>
                    <div class="menu-item-actions">
                        <button class="action-btn edit-btn"><i class="fas fa-edit"></i> Modifica</button>
                        <button class="action-btn delete-btn"><i class="fas fa-trash-alt"></i> Elimina</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal for Adding/Editing Products -->
    <div class="modal-overlay" id="productModal">
        <div class="modal">
            <form id="productForm">
                <input type="hidden" id="productId"> <!-- Hidden input for editing -->
                <div class="modal-header"> <!-- Rosso -->
                    <h3 id="modalTitle">Aggiungi Nuovo Prodotto</h3>
                    <button type="button" class="modal-close">√ó</button> <!-- Colore arancione al hover -->
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="productName" class="form-label">Nome Prodotto *</label>
                        <input type="text" class="form-control" id="productName" placeholder="Inserisci il nome del prodotto" required>
                    </div>
                    <div class="form-group">
                        <label for="productCategory" class="form-label">Categoria *</label>
                        <select class="form-control" id="productCategory" required>
                            <option value="">Seleziona categoria...</option>
                            <option value="panini">Panini</option>
                            <option value="pizze">Pizze</option>
                            <option value="patatine">Contorni</option>
                            <option value="bevande">Bevande</option>
                            <option value="dessert">Dessert</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="productPrice" class="form-label">Prezzo (‚Ç¨) *</label>
                        <input type="number" class="form-control" id="productPrice" placeholder="0.00" step="0.01" min="0" required>
                    </div>
                    <div class="form-group">
                        <label for="productDescription" class="form-label">Descrizione *</label>
                        <textarea class="form-control" id="productDescription" rows="3" placeholder="Descrivi il prodotto..." required></textarea>
                    </div>
                    <div class="form-group">
                        <label for="productImage" class="form-label">Immagine URL</label>
                        <input type="url" class="form-control" id="productImage" placeholder="https://...">
                        <small class="text-muted">Opzionale. Usa immagini reali o da unsplash.com/s/photos/TERMINE.</small>
                    </div>
                    <div class="form-group">
                        <label for="productStatus" class="form-label">Stato</label>
                        <select class="form-control" id="productStatus">
                            <option value="active" selected>Attivo</option>
                            <option value="inactive">Inattivo</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="productBadge" class="form-label">Badge (opzionale)</label>
                        <select class="form-control" id="productBadge">
                            <option value="">Nessun badge</option>
                            <option value="bestseller">Bestseller</option>
                            <option value="new">Nuovo</option>
                            <option value="promo">Promo</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-primary" id="cancelBtn">Annulla</button> <!-- Rosso outline -->
                    <button type="submit" class="btn btn-primary" id="saveProductBtn">Salva Prodotto</button> <!-- Rosso -->
                </div>
            </form>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            createParticles(); // Usa particelle rosse
            setActiveNavLink(); // Imposta "Menu" come attivo
            loadNotifications();
            setupCategoryFilters(); // Categorie rosse
            setupProductFilter(); // Select rosso on focus
            setupModal(); // Modale rossa
            setupActionButtons(); // Bottone edit rosso

            setTimeout(() => {
                showToast('Menu caricato', 'Visualizzazione dei prodotti aggiornata', 'success');
            }, 1000);
        });

        // Global elements
        const modalOverlay = document.getElementById('productModal');
        const productForm = document.getElementById('productForm');
        const modalTitle = document.getElementById('modalTitle');
        const saveProductBtn = document.getElementById('saveProductBtn');
        const productIdInput = document.getElementById('productId');
        const productNameInput = document.getElementById('productName');
        const productCategorySelect = document.getElementById('productCategory');
        const productPriceInput = document.getElementById('productPrice');
        const productDescriptionTextarea = document.getElementById('productDescription');
        const productImageInput = document.getElementById('productImage');
        const productStatusSelect = document.getElementById('productStatus');
        const productBadgeSelect = document.getElementById('productBadge');
        const menuGridContainer = document.getElementById('menu-grid-container');

        // --- FUNCTIONS ---
        function createParticles() {
            const particles = document.getElementById('particles'); if (!particles) return; particles.innerHTML = ''; const particleCount = 50;
            for (let i = 0; i < particleCount; i++) { const particle = document.createElement('div'); particle.className = 'particle'; const posX = Math.random() * 100; const posY = Math.random() * 100; const size = Math.random() * 10 + 2; const opacity = Math.random() * 0.5 + 0.1; const duration = Math.random() * 60 + 30; particle.style.left = `${posX}%`; particle.style.top = `${posY}%`; particle.style.width = `${size}px`; particle.style.height = `${size}px`; particle.style.opacity = opacity; 
             // MODIFICATO: Particelle rosse
             if (i % 2 === 0) particle.style.backgroundColor = 'rgba(238, 27, 27, 0.15)'; else particle.style.backgroundColor = 'rgba(212, 16, 16, 0.15)'; 
             particle.style.animation = `particleFloat ${duration}s infinite alternate ease-in-out ${Math.random() * 10}s, particleFade ${duration * 1.5}s infinite alternate ease-in-out ${Math.random() * 10}s`; particles.appendChild(particle); }
         }

        function setActiveNavLink() {
            const navLinks = document.querySelectorAll('.header-nav a');
            navLinks.forEach(link => { link.classList.remove('active'); });
            const menuLink = document.querySelector('.header-nav a[href="/menu"]');
            if (menuLink) { menuLink.classList.add('active'); }
         }

        function loadNotifications() { 
             try { setTimeout(() => { const badge = document.getElementById('notification-badge'); if (badge) { badge.textContent = "1"; badge.style.display = 'flex'; } }, 2000); } catch (e) { console.log('Notifiche demo.'); }
        }

        function setupCategoryFilters() {
            const categoryButtons = document.querySelectorAll('.category-btn');
            categoryButtons.forEach(button => {
                button.addEventListener('click', function() {
                    categoryButtons.forEach(btn => btn.classList.remove('active'));
                    this.classList.add('active');
                    applyFilters(); 
                    showToast('Categoria filtrata', `Visualizzazione: ${getCategoryDisplayName(this.dataset.category)}`, 'success');
                });
            });
        }

        function getCategoryDisplayName(category) {
            const btn = document.querySelector(`.category-btn[data-category="${category}"]`);
            return btn ? btn.textContent.trim() : category;
        }

        function setupProductFilter() {
            const productFilter = document.getElementById('product-filter');
            if (productFilter) { productFilter.addEventListener('change', applyFilters); }
        }

        function applyFilters() {
             const activeCategory = document.querySelector('.category-btn.active')?.dataset.category || 'all';
             const selectedProductFilter = document.getElementById('product-filter').value;
             const menuItems = menuGridContainer.querySelectorAll('.menu-item');

             menuItems.forEach(item => {
                 const itemCategory = item.dataset.category;
                 const itemStatus = item.querySelector('.status-badge')?.dataset.status;
                 const itemBadge = item.dataset.badge || '';
                 const isInCategory = (activeCategory === 'all' || itemCategory === activeCategory);
                 let passesProductFilter = true;
                 switch (selectedProductFilter) {
                     case 'active': passesProductFilter = (itemStatus === 'active'); break;
                     case 'inactive': passesProductFilter = (itemStatus === 'inactive'); break;
                     case 'bestseller': passesProductFilter = (itemBadge === 'bestseller'); break;
                     case 'new': passesProductFilter = (itemBadge === 'new'); break;
                     case 'promo': passesProductFilter = (itemBadge === 'promo'); break;
                 }
                 const shouldShow = isInCategory && passesProductFilter;
                 item.style.display = shouldShow ? 'flex' : 'none'; // Changed display to flex
                 if(shouldShow){ item.classList.remove('animate-item'); void item.offsetWidth; item.classList.add('animate-item'); }
             });
         }

        function setupModal() {
            const addProductBtn = document.getElementById('addProductBtn');
            const modalClose = document.querySelector('#productModal .modal-close');
            const cancelBtn = document.getElementById('cancelBtn');
            const openModalForAdd = () => { productForm.reset(); productIdInput.value = ''; modalTitle.textContent = 'Aggiungi Nuovo Prodotto'; saveProductBtn.textContent = 'Salva Prodotto'; modalOverlay.classList.add('open'); document.body.style.overflow = 'hidden'; };
            const closeModal = () => { modalOverlay.classList.remove('open'); document.body.style.overflow = ''; productForm.reset(); productIdInput.value = ''; };
            if (addProductBtn) addProductBtn.addEventListener('click', openModalForAdd);
            if (modalClose) modalClose.addEventListener('click', closeModal);
            if (cancelBtn) cancelBtn.addEventListener('click', closeModal);
            if (modalOverlay) modalOverlay.addEventListener('click', (e) => { if (e.target === modalOverlay) closeModal(); });

            productForm.addEventListener('submit', function(e) {
                e.preventDefault();
                const editingId = productIdInput.value;
                const name = productNameInput.value.trim();
                const category = productCategorySelect.value;
                const price = parseFloat(productPriceInput.value);
                const description = productDescriptionTextarea.value.trim();
                let image = productImageInput.value.trim();
                const status = productStatusSelect.value;
                const badge = productBadgeSelect.value;
                if (!name || !category || isNaN(price) || price < 0 || !description) { showToast('Errore validazione', 'Compila correttamente tutti i campi obbligatori (*)', 'error'); return; }
                if (!image) { const searchTerm = name.split(' ')[0].toLowerCase(); image = `https://source.unsplash.com/300x200/?${encodeURIComponent(searchTerm + ' food')}`; }
                if (editingId) { updateProductInUI(editingId, name, category, price, description, image, status, badge); showToast('Prodotto Modificato', `Il prodotto ${name} √® stato aggiornato.`, 'success'); } 
                else { addNewProductToUI(name, category, price, description, image, status, badge); showToast('Prodotto Aggiunto', `Il prodotto ${name} √® stato aggiunto al menu.`, 'success'); }
                closeModal();
            });
        }
        
        function updateProductInUI(id, name, category, price, description, image, status, badge) {
            const menuItem = menuGridContainer.querySelector(`.menu-item[data-id="${id}"]`); if (!menuItem) return;
            menuItem.dataset.category = category; menuItem.dataset.badge = badge;
            const imageEl = menuItem.querySelector('.menu-item-image'); imageEl.style.backgroundImage = `url('${image}')`; imageEl.dataset.originalImage = image;
            const existingBadge = menuItem.querySelector('.menu-item-badge'); if(existingBadge) existingBadge.remove(); if(badge) { const badgeEl = document.createElement('div'); badgeEl.className = `menu-item-badge ${badge}`; badgeEl.textContent = badge.charAt(0).toUpperCase() + badge.slice(1); menuItem.insertBefore(badgeEl, imageEl); }
            const categoryEl = menuItem.querySelector('.menu-item-category'); let categoryIcon = 'utensils'; switch(category) { case 'panini': categoryIcon = 'hamburger'; break; case 'pizze': categoryIcon = 'pizza-slice'; break; case 'patatine': categoryIcon = 'bacon'; break; case 'bevande': categoryIcon = 'cocktail'; break; case 'dessert': categoryIcon = 'ice-cream'; break; } categoryEl.innerHTML = `<i class="fas fa-${categoryIcon}"></i> ${getCategoryDisplayName(category)}`;
            const titleH3 = menuItem.querySelector('.menu-item-title h3'); titleH3.childNodes[0].nodeValue = name + " ";
            const statusBadge = menuItem.querySelector('.status-badge'); const isActive = status === 'active'; statusBadge.className = `status-badge ${isActive ? 'active-badge' : 'inactive-badge'}`; statusBadge.innerHTML = `<i class="fas ${isActive ? 'fa-check-circle' : 'fa-clock'}"></i> ${isActive ? 'Attivo' : 'Inattivo'}`; statusBadge.dataset.status = status;
            menuItem.querySelector('.menu-item-price').textContent = `‚Ç¨${price.toFixed(2)}`; menuItem.querySelector('.menu-item-description').textContent = description;
            applyFilters(); 
        }

        function addNewProductToUI(name, category, price, description, image, status, badge) {
            const existingIds = Array.from(menuGridContainer.querySelectorAll('.menu-item')).map(item => parseInt(item.dataset.id || 0)); const newId = Math.max(0, ...existingIds) + 1;
            const menuItem = document.createElement('div'); menuItem.className = 'menu-item card-hover-effect animate-item'; menuItem.dataset.category = category; menuItem.dataset.id = newId; menuItem.dataset.badge = badge;
            const imageUrl = image; let badgeHtml = ''; if (badge) { badgeHtml = `<div class="menu-item-badge ${badge}">${badge.charAt(0).toUpperCase() + badge.slice(1)}</div>`; }
            let categoryIcon = 'utensils'; switch (category) { case 'panini': categoryIcon = 'hamburger'; break; case 'pizze': categoryIcon = 'pizza-slice'; break; case 'patatine': categoryIcon = 'bacon'; break; case 'bevande': categoryIcon = 'cocktail'; break; case 'dessert': categoryIcon = 'ice-cream'; break; } const categoryDisplayName = getCategoryDisplayName(category); const categoryHtml = `<div class="menu-item-category"><i class="fas fa-${categoryIcon}"></i> ${categoryDisplayName}</div>`;
            const isActive = status === 'active'; const statusBadgeHtml = `<span class="status-badge ${isActive ? 'active-badge' : 'inactive-badge'}" data-status="${status}"><i class="fas ${isActive ? 'fa-check-circle' : 'fa-clock'}"></i> ${isActive ? 'Attivo' : 'Inattivo'}</span>`;
            menuItem.innerHTML = `${badgeHtml}${categoryHtml}<div class="menu-item-image" style="background-image: url('${imageUrl}')" data-original-image="${productImageInput.value || ''}"></div><div class="menu-item-details"><div class="menu-item-title"><h3>${name}${statusBadgeHtml}</h3><div class="menu-item-price">‚Ç¨${parseFloat(price).toFixed(2)}</div></div><div class="menu-item-description">${description}</div><div class="menu-item-actions"><button class="action-btn edit-btn"><i class="fas fa-edit"></i> Modifica</button><button class="action-btn delete-btn"><i class="fas fa-trash-alt"></i> Elimina</button></div></div>`;
            menuGridContainer.insertBefore(menuItem, menuGridContainer.firstChild);
            applyFilters(); 
         }

        function setupActionButtons() {
            menuGridContainer.addEventListener('click', function(e) {
                 const target = e.target; const actionButton = target.closest('.action-btn'); if (!actionButton) return;
                 const menuItem = actionButton.closest('.menu-item'); if (!menuItem) return; 
                 const productId = menuItem.dataset.id; const productNameElement = menuItem.querySelector('.menu-item-title h3'); const productName = productNameElement ? productNameElement.childNodes[0].nodeValue.trim() : 'Prodotto sconosciuto';
                 if (actionButton.classList.contains('edit-btn')) { openModalForEdit(menuItem); } 
                 else if (actionButton.classList.contains('delete-btn')) { 
                     if (confirm(`Sei sicuro di voler eliminare "${productName}"? Questa azione non pu√≤ essere annullata.`)) { 
                         menuItem.style.transition = 'opacity 0.3s ease, transform 0.3s ease'; menuItem.style.opacity = '0'; menuItem.style.transform = 'scale(0.8)'; 
                         setTimeout(() => { menuItem.remove(); showToast('Prodotto Eliminato', `"${productName}" √® stato rimosso dal menu.`, 'success'); }, 300); 
                     } 
                 } 
             });
         }
        
        function openModalForEdit(menuItem) {
            const id = menuItem.dataset.id; const name = menuItem.querySelector('.menu-item-title h3')?.childNodes[0].nodeValue.trim() || ''; const category = menuItem.dataset.category || ''; const priceText = menuItem.querySelector('.menu-item-price')?.textContent || '0'; const price = parseFloat(priceText.replace('‚Ç¨', '').replace(',', '.')) || 0; const description = menuItem.querySelector('.menu-item-description')?.textContent || ''; const status = menuItem.querySelector('.status-badge')?.dataset.status || 'active'; const badge = menuItem.dataset.badge || ''; const imageEl = menuItem.querySelector('.menu-item-image'); let imageUrl = imageEl?.dataset.originalImage || ''; if (!imageUrl && imageEl?.style.backgroundImage) { const urlMatch = imageEl.style.backgroundImage.match(/url\(["']?(.+?)["']?\)/); imageUrl = urlMatch ? urlMatch[1] : ''; }
            productIdInput.value = id; productNameInput.value = name; productCategorySelect.value = category; productPriceInput.value = price.toFixed(2); productDescriptionTextarea.value = description; productImageInput.value = imageUrl; productStatusSelect.value = status; productBadgeSelect.value = badge;
            modalTitle.textContent = 'Modifica Prodotto'; saveProductBtn.textContent = 'Salva Modifiche'; modalOverlay.classList.add('open'); document.body.style.overflow = 'hidden';
        }

        // --- TOAST & LOGOUT ---
         function showToast(title, message, type = 'success') { /* ... Gi√† modificato per colore 'info' rosso */
             const existingToasts = document.querySelectorAll('.toast-notification'); existingToasts.forEach(toast => toast.remove()); const toast = document.createElement('div'); toast.className = `toast-notification toast-${type}`; let icon = 'info-circle'; if (type === 'success') icon = 'check-circle'; if (type === 'error') icon = 'exclamation-circle'; if (type === 'warning') icon = 'exclamation-triangle';
             // Aggiunta logica per colore rosso 'info'
             let iconBgColor = ''; let iconColor = '';
             if (type === 'success') { iconBgColor = 'rgba(46, 204, 113, 0.15)'; iconColor = 'var(--accent-green)'; }
             else if (type === 'error') { iconBgColor = 'rgba(231, 76, 60, 0.15)'; iconColor = 'var(--accent-red)'; }
             else if (type === 'warning') { iconBgColor = 'rgba(243, 156, 18, 0.15)'; iconColor = 'var(--accent-orange)'; }
             else { /* Assume type 'info' or default */ iconBgColor = 'rgba(238, 27, 27, 0.15)'; iconColor = 'var(--navbar-red-main)'; } // Rosso per info
             
             toast.innerHTML = `<div class="toast-icon" style="background-color:${iconBgColor}; color:${iconColor};"><i class="fas fa-${icon}"></i></div><div class="toast-content"><div class="toast-title">${title}</div><div class="toast-message">${message}</div></div><div class="toast-close"><i class="fas fa-times"></i></div>`;
             document.body.appendChild(toast); setTimeout(() => toast.classList.add('show'), 10); toast.querySelector('.toast-close').addEventListener('click', () => { toast.classList.remove('show'); setTimeout(() => toast.remove(), 300); }); setTimeout(() => { if (document.body.contains(toast)) { toast.classList.remove('show'); setTimeout(() => { if (document.body.contains(toast)) toast.remove(); }, 300); } }, 5000);
         }
        function logout() { /* ... Gi√† modificato per colori rossi ... */
             const loadingOverlay = document.createElement('div'); loadingOverlay.style.cssText = 'position:fixed;top:0;left:0;width:100%;height:100%;background-color:rgba(255,255,255,0.8);display:flex;flex-direction:column;justify-content:center;align-items:center;z-index:2000;backdrop-filter:blur(5px);'; const spinnerContainer = document.createElement('div'); spinnerContainer.style.cssText = 'width:60px;height:60px;position:relative;'; const spinner = document.createElement('div'); spinner.style.cssText = 'border:4px solid rgba(0,0,0,0.1);border-top-color:var(--navbar-red-main);border-radius:50%;width:100%;height:100%;animation:spin 1s linear infinite;'; const style = document.createElement('style'); style.textContent = `@keyframes spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}`; document.head.appendChild(style); spinnerContainer.appendChild(spinner); const loadingText = document.createElement('p'); loadingText.textContent = 'Logout in corso...'; loadingText.style.cssText = 'margin-top:20px;color:var(--navbar-red-main);font-weight:500;'; loadingOverlay.appendChild(spinnerContainer); loadingOverlay.appendChild(loadingText); document.body.appendChild(loadingOverlay);
             fetch('/logout', { method: 'POST', headers: { 'Content-Type': 'application/json' } })
             .then(response => { if (response.ok) { loadingText.textContent = 'Reindirizzamento...'; setTimeout(() => { window.location.href = '/login'; }, 800); } else { throw new Error('Errore durante il logout'); } })
             .catch(error => { console.error('Errore durante il logout:', error); loadingText.textContent = 'Si √® verificato un errore. Riprova.'; const retryButton = document.createElement('button'); retryButton.textContent = 'Riprova'; retryButton.style.cssText = 'margin-top:15px;padding:8px 20px;background:var(--navbar-red-main);color:white;border:none;border-radius:var(--radius-sm);cursor:pointer;'; retryButton.onclick = function() { document.body.removeChild(loadingOverlay); logout(); }; loadingOverlay.appendChild(retryButton); });
         }

    </script>
</body>
</html>